{"ast":null,"code":"import React, { useState } from 'react';\nvar styles = {\n  \"attrSection\": \"_1-wtg\",\n  \"attrImageSection\": \"_2sohj\",\n  \"attrListSection\": \"_2vJBP\",\n  \"attributeList\": \"_3afez\",\n  \"attributList\": \"_1ryT8\",\n  \"item\": \"_VrCvP\",\n  \"activeAttr\": \"_3FIQ_\",\n  \"itemHeader\": \"_1-xF_\",\n  \"itemDescription\": \"_ve3dP\",\n  \"activeItemDescription\": \"_1lLZK\",\n  \"activeSelectorActive\": \"_2CMVI\",\n  \"activeSelector\": \"_1Ekp3\",\n  \"arrowDown\": \"_18n05\"\n};\n\nvar CardView = function CardView(_ref) {\n  var items = _ref.items,\n      activeColor = _ref.activeColor,\n      imageHeight = _ref.imageHeight,\n      imageWidth = _ref.imageWidth;\n  var navigations = items;\n\n  var _useState = useState(navigations[0].image),\n      itemLink = _useState[0],\n      setItemLink = _useState[1];\n\n  var _useState2 = useState(navigations[0]),\n      selectedItem = _useState2[0],\n      setSelectedItem = _useState2[1];\n\n  var handleClick = function handleClick(item) {\n    setItemLink(item.image);\n    setSelectedItem(item);\n  };\n\n  var renderNav = function renderNav(items) {\n    return items.map(function (item) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: selectedItem.id === item.id ? styles.item + ' ' + styles.activeAttr : styles.item,\n        onClick: function onClick() {\n          return handleClick(item);\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: activeColor || '#2590ef'\n        },\n        className: selectedItem.id === item.id ? styles.activeSelectorActive : styles.activeSelector\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: styles.arrowDown\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: styles.itemHeader\n      }, item.header), /*#__PURE__*/React.createElement(\"p\", {\n        className: selectedItem.id === item.id ? styles.activeItemDescription : styles.itemDescription\n      }, item.description)));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.attrSection\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.attrImageSection\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: itemLink,\n    className: styles.attrImage,\n    style: {\n      height: imageHeight || '',\n      width: imageWidth || ''\n    },\n    alt: \"logo\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.attrListSection\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.attributeList\n  }, /*#__PURE__*/React.createElement(\"ul\", null, renderNav(navigations)))));\n};\n\nexport { CardView };","map":{"version":3,"sources":["../src/index.js"],"names":["CardView","items","activeColor","imageHeight","imageWidth","navigations","itemLink","setItemLink","useState","selectedItem","setSelectedItem","handleClick","item","renderNav","id","styles","backgroundColor","activeSelector","arrowDown","itemHeader","itemDescription","attrSection","attrImageSection","height","width","attrListSection","attributeList"],"mappings":";;;;;;;;;;;;;;;;;IAGaA,QAAQ,GAAG,SAAXA,QAAW,CAAA,IAAA,EAAqD;AAAA,MAAlDC,KAAkD,GAAA,IAAA,CAAlDA,KAAkD;AAAA,MAA3CC,WAA2C,GAAA,IAAA,CAA3CA,WAA2C;AAAA,MAA9BC,WAA8B,GAAA,IAAA,CAA9BA,WAA8B;AAAA,MAAjBC,UAAiB,GAAA,IAAA,CAAjBA,UAAiB;AAC3E,MAAMC,WAAW,GAAjB,KAAA;;AAD2E,MAAA,SAAA,GAG3CG,QAAQ,CAACH,WAAW,CAAXA,CAAW,CAAXA,CAHkC,KAGnC,CAHmC;AAAA,MAGpEC,QAHoE,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAG1DC,WAH0D,GAAA,SAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,UAAA,GAInCC,QAAQ,CAACH,WAAW,CAJe,CAIf,CAAZ,CAJ2B;AAAA,MAIpEI,YAJoE,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAItDC,eAJsD,GAAA,UAAA,CAAA,CAAA,CAAA;;AAM3E,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAU;AAC5BJ,IAAAA,WAAW,CAACK,IAAI,CAAhBL,KAAW,CAAXA;AACAG,IAAAA,eAAe,CAAfA,IAAe,CAAfA;AAFF,GAAA;;AAKA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAAA,KAAA,EAAW;AAC3B,WAAO,KAAK,CAAL,GAAA,CAAU,UAAA,IAAA,EAAU;AACzB,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,GAAG,EAAED,IAAI,CAACE;AAAd,OAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,SAAS,EACPL,YAAY,CAAZA,EAAAA,KAAoBG,IAAI,CAAxBH,EAAAA,GACIM,MAAM,CAANA,IAAAA,GAAAA,GAAAA,GAAoBA,MAAM,CAD9BN,UAAAA,GAEIM,MAAM,CAJd,IAAA;AAME,QAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,iBAAMJ,WAAW,CAAjB,IAAiB,CAAjB;AAAA;AANX,OAAA,EAAA,aAQE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,KAAK,EAAE;AACLK,UAAAA,eAAe,EAAEd,WAAW,IAAI;AAD3B,SADT;AAIE,QAAA,SAAS,EACPO,YAAY,CAAZA,EAAAA,KAAoBG,IAAI,CAAxBH,EAAAA,GACIM,MAAM,CADVN,oBAAAA,GAEIM,MAAM,CAACE;AAPf,OAAA,CARF,EAAA,aAkBE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,EAAEF,MAAM,CAACG;AAArB,OAAA,CAlBF,EAAA,aAmBE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,EAAEH,MAAM,CAACI;AAArB,OAAA,EAAkCP,IAAI,CAnBxC,MAmBE,CAnBF,EAAA,aAoBE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,QAAA,SAAS,EACPH,YAAY,CAAZA,EAAAA,KAAoBG,IAAI,CAAxBH,EAAAA,GACIM,MAAM,CADVN,qBAAAA,GAEIM,MAAM,CAACK;AAJf,OAAA,EAOGR,IAAI,CA7Bb,WAsBM,CApBF,CADF,CADF;AADF,KAAO,CAAP;AADF,GAAA;;AAuCA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEG,MAAM,CAACM;AAAvB,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO;AAAvB,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,GAAG,EADL,QAAA;AAEE,IAAA,SAAS,EAAEP,MAAM,CAFnB,SAAA;AAGE,IAAA,KAAK,EAAE;AACLQ,MAAAA,MAAM,EAAEpB,WAAW,IADd,EAAA;AAELqB,MAAAA,KAAK,EAAEpB,UAAU,IAAI;AAFhB,KAHT;AAOE,IAAA,GAAG,EAAC;AAPN,GAAA,CADF,CADF,EAAA,aAYE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEW,MAAM,CAACU;AAAvB,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACW;AAAvB,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAKb,SAAS,CAftB,WAesB,CAAd,CADF,CADF,CAZF,CADF;AAlDK,C","sourcesContent":["import React, { useState } from 'react'\r\nimport styles from './styles.module.css'\r\n\r\nexport const CardView = ({ items, activeColor, imageHeight, imageWidth }) => {\r\n  const navigations = items\r\n\r\n  const [itemLink, setItemLink] = useState(navigations[0].image)\r\n  const [selectedItem, setSelectedItem] = useState(navigations[0])\r\n\r\n  const handleClick = (item) => {\r\n    setItemLink(item.image)\r\n    setSelectedItem(item)\r\n  }\r\n\r\n  const renderNav = (items) => {\r\n    return items.map((item) => {\r\n      return (\r\n        <li key={item.id}>\r\n          <div\r\n            className={\r\n              selectedItem.id === item.id\r\n                ? styles.item + ' ' + styles.activeAttr\r\n                : styles.item\r\n            }\r\n            onClick={() => handleClick(item)}\r\n          >\r\n            <div\r\n              style={{\r\n                backgroundColor: activeColor || '#2590ef'\r\n              }}\r\n              className={\r\n                selectedItem.id === item.id\r\n                  ? styles.activeSelectorActive\r\n                  : styles.activeSelector\r\n              }\r\n            />\r\n            <i className={styles.arrowDown} />\r\n            <p className={styles.itemHeader}>{item.header}</p>\r\n            <p\r\n              className={\r\n                selectedItem.id === item.id\r\n                  ? styles.activeItemDescription\r\n                  : styles.itemDescription\r\n              }\r\n            >\r\n              {item.description}\r\n            </p>\r\n          </div>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={styles.attrSection}>\r\n      <div className={styles.attrImageSection}>\r\n        <img\r\n          src={itemLink}\r\n          className={styles.attrImage}\r\n          style={{\r\n            height: imageHeight || '',\r\n            width: imageWidth || ''\r\n          }}\r\n          alt='logo'\r\n        />\r\n      </div>\r\n      <div className={styles.attrListSection}>\r\n        <div className={styles.attributeList}>\r\n          <ul>{renderNav(navigations)}</ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}